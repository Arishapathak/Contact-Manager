{"version":3,"sources":["context.js","component/layout/Header.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/pages/About.js","component/pages/NotFound.js","component/contacts/EditContacts.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Header","branding","className","href","to","defaultProps","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","AddContact","errors","target","onSubmit","preventDefault","newContact","post","history","push","EditContacts","updContact","match","params","put","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.524a1d1f.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nconst Context=React.createContext();\r\nconst reducer=(state,action)=>{\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts: state.contacts.filter(\r\n                contact => contact.id !== action.payload\r\n                )\r\n        };\r\n        case 'ADD_CONTACT':\r\n            return{\r\n                ...state,\r\n               contacts:[action.payload,...state.contacts]\r\n            };\r\n    case 'UPDATE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts:state.contacts.map(contact=>contact.id===action.payload.id \r\n                ?(contact=action.payload)\r\n            :contact)\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component{\r\n    state={\r\n        contacts: [\r\n       \r\n        ],\r\n        dispatch: action => this.setState(state => reducer(state,action))\r\n        \r\n    };\r\n    async componentDidMount(){\r\n        const res=await axios\r\n      .get('https://jsonplaceholder.typicode.com/users');\r\n      this.setState({contacts: res.data});\r\n    }\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\nexport const Consumer=Context.Consumer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = props =>{\r\n    const {branding}=props;\r\n    return(\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n    <a href=\"/\" className=\"navbar-brand\">{\r\n        branding\r\n    }</a>\r\n    <div>\r\n        <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                    <i className=\"fas fa-home\"></i>\r\n                    Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i>\r\n                Add</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/About\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i>\r\n                About</Link>\r\n            </li>\r\n\r\n        </ul>\r\n    </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nHeader.defaultProps={\r\n    branding: 'My App'\r\n};\r\nHeader.propTypes={\r\n    branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Contact extends Component\r\n{\r\n    state={showContactInfo:false};\r\n    onShowClick=e=>{\r\n       this.setState({showContactInfo: !this.state.showContactInfo});\r\n    };\r\n    onDeleteClick=async (id,dispatch)=>{\r\n        try{\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n     dispatch({type: 'DELETE_CONTACT',payload: id});\r\n    }\r\n     catch(e){\r\n        dispatch({type: 'DELETE_CONTACT',payload: id});\r\n     }\r\n     };\r\n    render()\r\n    {\r\n        const{ id,name, email, phone}=this.props.contact;\r\n        const { showContactInfo}=this.state;\r\n        return(\r\n             <Consumer>\r\n                 {value=>{\r\n                     const {dispatch}=value;\r\n                     return(\r\n                        <div className=\"card card-body mb-3\">\r\n                        <h4>\r\n                        {name}{' '}\r\n                         <i onClick={this.onShowClick} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}></i>\r\n                        <i className=\"fas fa-times\" style={{cursor: 'pointer',float: 'right',color:'red'}} onClick={this.onDeleteClick.bind(this,id,dispatch)}></i>\r\n                        <Link to={`contact/edit/${id}`}>\r\n                            <i className=\"fas fa-pencil-alt\"\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                float:'right ',\r\n                                color:'black',\r\n                                marginRight:'1rem'\r\n                            }}></i>\r\n                        </Link>\r\n                        \r\n                        </h4>\r\n                        {\r\n                            showContactInfo ?\r\n                            (<ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">\r\n                                email: {email}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                Phone: {phone}\r\n                            </li>\r\n                        </ul>):null\r\n                        }\r\n                        \r\n            </div>\r\n                     );\r\n                 }}\r\n\r\n             </Consumer>\r\n\r\n\r\n\r\n            \r\n        );\r\n    }\r\n}\r\nContact.propTypes={\r\n    contact: PropTypes.object.isRequired\r\n   \r\n}\r\nexport default Contact;","import React ,{Component} from 'react';\r\nimport Contact from './Contact'\r\nimport {Consumer} from '../../context';\r\nclass Contacts extends Component{\r\n      render(){\r\n        \r\n         return(\r\n             <Consumer>\r\n                 {value=>{const{contacts}=value;\r\n                     return(\r\n<React.Fragment>\r\n    <h1 className=\"display-4 mb-2\">\r\n        <span className=\"text-danger\">\r\n        Contact </span>\r\n        List\r\n    </h1>\r\n              {contacts.map(contact =>(\r\n                <Contact\r\n                key={contact.id}\r\n                contact={contact} />))}\r\n              </React.Fragment>\r\n                     );\r\n                 }}\r\n             </Consumer>\r\n         );\r\n\r\n\r\n      \r\n    }\r\n}\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst TextInputGroup=({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n})=>{\r\n    return(\r\n        <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input type={type} \r\n        name={name}\r\n        className=\"form-control form-control-lg\" \r\n        placeholder={placeholder}value={value}\r\n        onChange={onChange}\r\n        >\r\n        </input>\r\n        \r\n    </div>\r\n    );\r\n};\r\nTextInputGroup.propTypes={\r\n    label:PropTypes.string.isRequired,\r\n    name:PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired\r\n}\r\nTextInputGroup.defaultProps={\r\n    type:'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React,{Component} from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from'../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component{\r\n state={\r\n     name: '',\r\n     email: '',\r\n     phone: '',\r\n     errors:{}\r\n };\r\n onChange=e=>this.setState({[e.target.name]: e.target.value});\r\n onSubmit=async (dispatch,e)=>{\r\n     e.preventDefault();\r\n     const{name,email,phone}=this.state;\r\n        if(name===''){\r\n            this.setState({errors:{name:\"Name is required\"}});\r\n        }\r\n        if(email===''){\r\n            this.setState({errors:{email:\"Eamil is required\"}});\r\n        }\r\n        if(phone===''){\r\n            this.setState({errors:{phone:\"PHONE is required\"}});\r\n        }\r\n     const newContact={\r\n        \r\n         name,\r\n         email,\r\n         phone,\r\n      \r\n     };\r\n\r\n     const res=await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n    \r\n     dispatch({type: 'ADD_CONTACT',payload: res.data});\r\n   \r\n     this.setState({\r\n         name:'',\r\n         email:'',\r\n         phone:'',\r\n         errors:{}\r\n     }); \r\n     this.props.history.push('/');\r\n };\r\n\r\n    render(){\r\n        const {name,email,phone,errors}=this.state;\r\n        return(\r\n            <Consumer>\r\n                {value=>{\r\n                    const{dispatch}=value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Add</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                               <TextInputGroup\r\n                               label=\"Name\"\r\n                               name=\"name\"\r\n                               placeholder=\"Enter Name\"\r\n                               value={name}\r\n                               onChange={this.onChange}\r\n                               error={errors.name}\r\n                               />\r\n                               <TextInputGroup\r\n                               label=\"Email\"\r\n                               name=\"email\"\r\n                               type=\"email\"\r\n                               placeholder=\"Enter Email\"\r\n                               value={email}\r\n                               onChange={this.onChange}\r\n                               error={errors.email}\r\n                               />\r\n                               <TextInputGroup\r\n                               label=\"Phone\"\r\n                               name=\"phone\"\r\n                               placeholder=\"Enter Phone\"\r\n                               value={phone}\r\n                               onChange={this.onChange}\r\n                               error={errors.phone}\r\n                               />\r\n                                <input type=\"submit\" value=\"Add Contact\"\r\n                                className=\"btn btn-light btn-block\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n       \r\n    }\r\n}\r\nexport default AddContact; ","import React from 'react';\r\nexport default ()=>{\r\n    return(\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                About Contact Manager\r\n            </h1>\r\n            <p className=\"lead\">\r\n            Simple app to manage contacts\r\n            </p>\r\n            <p className=\"text-secondary\">\r\n                Version 1.0.0\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nexport default ()=>{\r\n    return(\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                404 Not Found\r\n            </h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}","import React,{Component} from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from'../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContacts extends Component{\r\n state={\r\n     name: '',\r\n     email: '',\r\n     phone: '',\r\n     errors:{}\r\n };\r\n async componentDidMount(){\r\n     const {id}=this.props.match.params;\r\n     const res=await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n     const contact=res.data;\r\n     this.setState({\r\n         name:contact.name,\r\n         email:contact.email,\r\n         phone:contact.phone\r\n     })\r\n }\r\n onChange=e=>this.setState({[e.target.name]: e.target.value});\r\n onSubmit=async (dispatch,e)=>{\r\n     e.preventDefault();\r\n     const{name,email,phone}=this.state;\r\n        if(name===''){\r\n            this.setState({errors:{name:\"Name is required\"}});\r\n        }\r\n        if(email===''){\r\n            this.setState({errors:{email:\"Eamil is required\"}});\r\n        }\r\n        if(phone===''){\r\n            this.setState({errors:{phone:\"PHONE is required\"}});\r\n        }\r\n        const updContact={\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n       const {id}=this.props.match.params;\r\n       const res=await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n       dispatch({type:'UPDATE_CONTACT',payload: res.data});\r\n   \r\n     this.setState({\r\n         name:'',\r\n         email:'',\r\n         phone:'',\r\n         errors:{}\r\n     }); \r\n     this.props.history.push('/');\r\n };\r\n\r\n    render(){\r\n        const {name,email,phone,errors}=this.state;\r\n        return(\r\n            <Consumer>\r\n                {value=>{\r\n                    const{dispatch}=value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Edit</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                               <TextInputGroup\r\n                               label=\"Name\"\r\n                               name=\"name\"\r\n                               placeholder=\"Enter Name\"\r\n                               value={name}\r\n                               onChange={this.onChange}\r\n                               error={errors.name}\r\n                               />\r\n                               <TextInputGroup\r\n                               label=\"Email\"\r\n                               name=\"email\"\r\n                               type=\"email\"\r\n                               placeholder=\"Enter Email\"\r\n                               value={email}\r\n                               onChange={this.onChange}\r\n                               error={errors.email}\r\n                               />\r\n                               <TextInputGroup\r\n                               label=\"Phone\"\r\n                               name=\"phone\"\r\n                               placeholder=\"Enter Phone\"\r\n                               value={phone}\r\n                               onChange={this.onChange}\r\n                               error={errors.phone}\r\n                               />\r\n                                <input type=\"submit\" value=\"Update Contact\"\r\n                                className=\"btn btn-light btn-block\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n       \r\n    }\r\n}\r\nexport default EditContacts; ","import React, { Component } from 'react';\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom';\n//import './App.css';\nimport {Provider} from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './component/layout/Header';\nimport Contacts from './component/contacts/Contacts';\nimport AddContact from './component/contacts/AddContact';\nimport About from './component/pages/About';\nimport NotFound from './component/pages/NotFound';\nimport EditContacts from './component/contacts/EditContacts';\n\nclass App extends Component{\n  render()\n  {\n    return(\n      <Provider>\n        <Router>\n      <div className=\"App\">\n        <Header branding=\"Contact Manager\"/>\n        <div className=\"container\">\n\n       <Switch>\n         <Route exact path=\"/\" component={Contacts}></Route>\n         <Route exact path=\"/contact/add\" component={AddContact}></Route>\n         <Route exact path=\"/contact/edit/:id\" component={EditContacts}></Route>\n         <Route exact path=\"/About\" component={About}></Route>\n         <Route component={NotFound}/>\n       </Switch>\n        </div>\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}